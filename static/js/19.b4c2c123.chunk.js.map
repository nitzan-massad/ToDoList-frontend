{"version":3,"file":"static/js/19.b4c2c123.chunk.js","mappings":"6OAWA,EAPmB,SAAAA,GACf,OACGC,EAAAA,EAAAA,KAAA,MAAAC,SAAKF,EAAMG,KAAKC,WAGvB,EC0BA,EA7BiB,SAAAJ,GAAU,IAADK,EAAAC,EAAAC,EAAAC,EAAAC,EACnBC,EAAO,CAAEC,UAAyB,QAAhBN,EAAEL,EAAMY,gBAAQ,IAAAP,OAAA,EAAdA,EAAgBM,UAAYE,UAAyB,QAAhBP,EAAEN,EAAMY,gBAAQ,IAAAN,OAAA,EAAdA,EAAgBQ,MAAQC,OAAqB,QAAfR,EAACP,EAAMY,gBAAQ,IAAAL,OAAA,EAAdA,EAAgBS,GAAIC,MAAW,OAALjB,QAAK,IAALA,GAAe,QAAVQ,EAALR,EAAOY,gBAAQ,IAAAJ,OAAV,EAALA,EAAiBS,OAE1I,OACEhB,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CACHC,GAAI,CACFC,SAAU,YACVC,MAAO,CAAEX,KAAAA,IAEXY,MAAO,CAAEC,eAAgB,QACzBC,UAAU,mBAAkBtB,UAE5BuB,EAAAA,EAAAA,MAAA,OACEH,MAAO,CAAEI,gBAAiB1B,EAAMY,SAASE,OACzCU,UAAU,iBAAgBtB,SAAA,EAE1BD,EAAAA,EAAAA,KAAA,MAAAC,SAAKyB,KAAKC,UAAwB,QAAfnB,EAACT,EAAMY,gBAAQ,IAAAH,OAAA,EAAdA,EAAgBE,cACpCV,EAAAA,EAAAA,KAAA,OAAKuB,UAAU,oBAAmBtB,SAC/BF,EAAMY,SAASK,MAAMY,KAAI,SAAA1B,GAAI,OAC5BF,EAAAA,EAAAA,KAAA,MAAsBuB,UAAU,mBAAkBtB,UAChDD,EAAAA,EAAAA,KAAC6B,EAAU,CAAC3B,KAAMA,KADXA,EAAK4B,OAET,UAMjB,E,UCMA,EAhCqB,SAAA/B,GACnB,IAAAgC,GAAsDC,EAAAA,EAAAA,KAA9CC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAAOC,EAAWJ,EAAXI,YAAaC,EAAUL,EAAVK,WACvCC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAiBlC,OAfAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEQnB,EAAY,sBAAuB,OAAQ,CACpE,eAAgB,qBAChB,OAFIe,EAAYE,EAAAG,KAGlBb,EAAeQ,EAAaM,OAAMJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElCM,QAAQC,IAAGP,EAAAK,IAAK,yBAAAL,EAAAQ,OAAA,GAAAX,EAAA,kBAEnB,kBATmB,OAAAJ,EAAAgB,MAAA,KAAAC,UAAA,KAWpBlB,GACF,GAAG,CAACT,KAGFX,EAAAA,EAAAA,MAACuC,EAAAA,SAAc,CAAA9D,SAAA,EACbD,EAAAA,EAAAA,KAACgE,EAAAA,EAAU,CAAC9B,MAAOA,EAAO+B,QAAS7B,KACnCZ,EAAAA,EAAAA,MAAA,MAAAvB,SAAA,CACGgC,IAAajC,EAAAA,EAAAA,KAACkE,EAAAA,EAAc,CAACC,WAAS,IACtC1B,EAAYb,KAAI,SAAAwC,GAAI,OACnBpE,EAAAA,EAAAA,KAACqE,EAAQ,CAAe1D,SAAUyD,GAAnBA,EAAKrD,GAAsB,SAKpD,C","sources":["Components/ItemInList/ItemInList.js","Components/ToDoList/ToDoList.js","pages/ShowAllLists/ShowAllLists.js"],"sourcesContent":["import React from \"react\";  \r\n\r\n\r\n\r\nconst ItemInList = props =>{\r\n    return(\r\n       <h5>{props.item.itemTitle}</h5>\r\n    )\r\n\r\n}\r\n\r\nexport default ItemInList","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ItemInList from '../ItemInList/ItemInList'\r\nimport './ToDoList.css'\r\n\r\nconst ToDoList = props => {\r\n const data = { listTitle: props.listData?.listTitle , listColor: props.listData?.color , listId:props.listData?.id, items:props?.listData?.items};\r\n\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname: '/showList',\r\n        state: { data }\r\n      }}\r\n      style={{ textDecoration: 'none' }}\r\n      className='to-to-list__link'\r\n    >\r\n      <div\r\n        style={{ backgroundColor: props.listData.color }}\r\n        className='toDoListBorder'\r\n      >\r\n        <h3>{JSON.stringify(props.listData?.listTitle)}</h3>\r\n        <div className='flexbox-container'>\r\n          {props.listData.items.map(item => (\r\n            <li key={item.itemId} className='horizontal-list '>\r\n              <ItemInList item={item} />\r\n            </li>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default ToDoList\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport LoadingSpinner from '../../Components/LoadingSpinner/LoadingSpinner'\r\nimport ErrorModal from '../../Components/ErrorModal/ErrorModal'\r\nimport ToDoList from '../../Components/ToDoList/ToDoList'\r\nimport { useHtppClient } from '../../shared/hooks/http-hook'\r\n\r\nconst ShowAllLists = props => {\r\n  const { isLoading, error, sendRequest, clearError } = useHtppClient()\r\n  const [loadedLists, setLoadedLists] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchUserLists = async () => {\r\n      try {\r\n        const responseData = await sendRequest('/get-all-user-lists', 'POST', {\r\n          'Content-Type': 'application/json'\r\n        })\r\n        setLoadedLists(responseData.lists)\r\n      } catch (err) {\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    fetchUserLists()\r\n  }, [sendRequest])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <ul>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        {loadedLists.map(list => (\r\n          <ToDoList key={list.id} listData={list} />\r\n        ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ShowAllLists\r\n"],"names":["props","_jsx","children","item","itemTitle","_props$listData","_props$listData2","_props$listData3","_props$listData4","_props$listData5","data","listTitle","listData","listColor","color","listId","id","items","Link","to","pathname","state","style","textDecoration","className","_jsxs","backgroundColor","JSON","stringify","map","ItemInList","itemId","_useHtppClient","useHtppClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedLists","setLoadedLists","useEffect","fetchUserLists","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","sent","lists","t0","console","log","stop","apply","arguments","React","ErrorModal","onClear","LoadingSpinner","asOverlay","list","ToDoList"],"sourceRoot":""}